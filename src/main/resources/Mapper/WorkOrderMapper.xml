<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.batchMesComDK.dao.WorkOrderMapper">
	<insert id="add" parameterType="com.batchMesComDK.entity.WorkOrder">
		insert into WorkOrder
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ID!=null">
				ID,
			</if>
			<if test="WorkOrderID!=null">
				WorkOrderID,
			</if>
			<if test="ProductCode!=null">
				ProductCode,
			</if>
			<if test="ProductName!=null">
				ProductName,
			</if>
			<if test="TotalOutput!=null">
				TotalOutput,
			</if>
			<if test="MfgCode!=null">
				MfgCode,
			</if>
			<if test="MfgVersion!=null">
				MfgVersion,
			</if>
			<if test="RecipeID!=null">
				RecipeID,
			</if>
			<if test="Identifier!=null">
				Identifier,
			</if>
			<if test="FormulaId!=null">
				FormulaId,
			</if>
			<if test="State!=null">
				State,
			</if>
				CreateTime,
			<if test="UnitID!=null">
				UnitID,
			</if>
			<if test="LotNo!=null">
				LotNo,
			</if>
			<if test="WorkcenterId!=null">
				WorkcenterId,
			</if>
			<if test="FormulaIdMes!=null">
				FormulaIdMes,
			</if>
				ClearFault,
			<if test="CreateType!=null">
				CreateType,
			</if>
			<if test="BatchCreated!=null">
				BatchCreated,
			</if>
				SendBRToMes
		</trim>
		values
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ID!=null">
				#{ID},
			</if>
			<if test="WorkOrderID!=null">
				#{WorkOrderID},
			</if>
			<if test="ProductCode!=null">
				#{ProductCode},
			</if>
			<if test="ProductName!=null">
				#{ProductName},
			</if>
			<if test="TotalOutput!=null">
				#{TotalOutput},
			</if>
			<if test="MfgCode!=null">
				#{MfgCode},
			</if>
			<if test="MfgVersion!=null">
				#{MfgVersion},
			</if>
			<if test="RecipeID!=null">
				#{RecipeID},
			</if>
			<if test="Identifier!=null">
				#{Identifier},
			</if>
			<if test="FormulaId!=null">
				#{FormulaId},
			</if>
			<if test="State!=null">
				#{State},
			</if>
				GETDATE(),
			<if test="UnitID!=null">
				#{UnitID},
			</if>
			<if test="LotNo!=null">
				#{LotNo},
			</if>
			<if test="WorkcenterId!=null">
				#{WorkcenterId},
			</if>
			<if test="FormulaIdMes!=null">
				#{FormulaIdMes},
			</if>
				0,
			<if test="CreateType!=null">
				#{CreateType},
			</if>
			<if test="BatchCreated!=null">
				#{BatchCreated},
			</if>
				${@com.batchMesComDK.entity.WorkOrder@UN_SEND}
		</trim>
	</insert>
	<update id="updateStateById">
		update WorkOrder set State=#{state} where ID=#{id}
	</update>
	<update id="updateStateByWorkOrderID">
		update WorkOrder set State=#{state} where WorkOrderID=#{workOrderID}
	</update>
	<update id="updateStateByFormulaId">
		update WorkOrder set State=#{state} where FormulaId=#{formulaId}
	</update>
	<update id="updateClearFaultByFormulaId">
		update WorkOrder set ClearFault=#{clearFault} where FormulaId=#{formulaId}
	</update>
	<select id="getListByStateList" resultType="com.batchMesComDK.entity.WorkOrder">
		select * from WorkOrder where 1=1
		<foreach collection="stateList" item="state" open=" and cast(state as char) in (" separator="," close=")">
		#{state}
		</foreach>
		order by CreateTime
	</select>
	<select id="getListByWOEndIDStateList" resultType="com.batchMesComDK.entity.WorkOrder">
		select * from WorkOrder where 1=1
		<foreach collection="woEndIDList" item="woEndID" open=" and cast(workOrderID as char) not in (" separator="," close=")">
		#{woEndID}
		</foreach>
		<foreach collection="stateList" item="state" open=" and cast(state as char) in (" separator="," close=")">
		#{state}
		</foreach>
		order by CreateTime
	</select>
	<select id="getSendToMesListByStateList" resultType="com.batchMesComDK.entity.WorkOrder">
		select * from WorkOrder where 1=1
		<foreach collection="stateList" item="state" open=" and cast(state as char) in (" separator="," close=")">
		#{state}
		</foreach>
		and DATEDIFF(hh,CreateTime,GETDATE())&lt;72
		order by CreateTime
	</select>
	<select id="getSendToMesListByStateListTest" resultType="com.batchMesComDK.entity.WorkOrder">
		select * from WorkOrder where 1=1
		<foreach collection="workOrderIDList" item="workOrderID" open=" and cast(workOrderID as char) in (" separator="," close=")">
		#{workOrderID}
		</foreach>
		<foreach collection="stateList" item="state" open=" and cast(state as char) in (" separator="," close=")">
		#{state}
		</foreach>
		and DATEDIFF(hh,CreateTime,GETDATE())&lt;${hoursAgo}
		order by CreateTime
	</select>
	<update id="edit" parameterType="com.batchMesComDK.entity.WorkOrder">
		update WorkOrder set 
		<trim suffixOverrides=",">
			<if test="workOrderID!=null">
				workOrderID=#{workOrderID},
			</if>
			<if test="productCode!=null">
				productCode=#{productCode},
			</if>
			<if test="productName!=null">
				productName=#{productName},
			</if>
			<if test="totalOutput!=null">
				totalOutput=#{totalOutput},
			</if>
			<if test="mfgCode!=null">
				mfgCode=#{mfgCode},
			</if>
			<if test="mfgVersion!=null">
				mfgVersion=#{mfgVersion},
			</if>
			<if test="recipeID!=null">
				recipeID=#{recipeID},
			</if>
			<if test="formulaId!=null">
				formulaId=#{formulaId},
			</if>
			<if test="state!=null">
				state=#{state},
			</if>
			<if test="createTime!=null">
				createTime=#{createTime},
			</if>
			<if test="unitID!=null">
				unitID=#{unitID},
			</if>
			<if test="identifier!=null">
				identifier=#{identifier},
			</if>
			<if test="createType!=null">
				createType=#{createType},
			</if>
		</trim>
		 where ID=#{ID}
	</update>
	<select id="getById" resultType="com.batchMesComDK.entity.WorkOrder">
		select * from WorkOrder where id=#{id}
	</select>
	<delete id="deleteByList">
		delete from WorkOrder where 1=1
		<foreach collection="idList" item="id" open=" and cast(id as char) in (" separator="," close=")">
		#{id}
		</foreach>
	</delete>
	<update id="updateZGIDByWorkOrderID">
		update WorkOrder set ZGID=#{zGID} where WorkOrderID=#{workOrderID}
	</update>
	<select id="getMaxFormulaIdNumByFormulaIdDate" resultType="java.lang.String">
		select substring(MAX(FormulaId),19,3) from WorkOrder where FormulaId like #{formulaIdDate}+'%'
	</select>
	<select id="getFormulaIdByWOID" resultType="java.lang.String">
		select FormulaId from WorkOrder where WorkOrderID=#{workOrderID}
	</select>
	<update id="updateStateByWOIDList">
		update WorkOrder set State=#{state} where 1=1
		<foreach collection="workOrderIDList" item="workOrderID" open=" and cast(workOrderID as char) in (" separator="," close=")">
		#{workOrderID}
		</foreach>
	</update>
	<select id="getCountByByWOIDList" resultType="java.lang.Integer">
		select count(*) from WorkOrder where 1=1
		<foreach collection="workOrderIDList" item="workOrderID" open=" and cast(workOrderID as char) in (" separator="," close=")">
		#{workOrderID}
		</foreach>
	</select>
	<select id="getStateListByWOIDList" resultType="java.lang.Integer">
		select State from WorkOrder where 1=1
		<foreach collection="workOrderIDList" item="workOrderID" open=" and cast(workOrderID as char) in (" separator="," close=")">
		#{workOrderID}
		</foreach>
	</select>
	<update id="updateBatchCreatedById">
		update WorkOrder set BatchCreated=#{batchCreated} where ID=#{id}
	</update>
	<select id="getBatchCreatedById" resultType="java.lang.Boolean">
		select BatchCreated from WorkOrder where ID=#{id}
	</select>
	<update id="updateApiFailDataById">
		update WorkOrder set ApiFailData=#{apiFailData} where ID=#{id}
	</update>
	<select id="getApiFailDataById" resultType="java.lang.String">
		select ApiFailData from WorkOrder where ID=#{id}
	</select>
	<update id="updateSendBRToMesByWorkOrderID">
		update WorkOrder set 
		<trim suffixOverrides=",">
			SendBRToMes=${sendBRToMes},
			<if test="sendBRToMes==@com.batchMesComDK.entity.WorkOrder@SENDING">
				LastSendTime=GETDATE()
			</if>
		</trim>
		 where WorkOrderID=#{workOrderID}
	</update>
	<select id="getUnSendBRToMesWOIDList" resultType="java.lang.String">
		select WorkOrderID from WorkOrder where SendBRToMes=${@com.batchMesComDK.entity.WorkOrder@UN_SEND}
		<foreach collection="stateList" item="state" open=" and state in (" separator="," close=")">
		#{state}
		</foreach>
	</select>
	<select id="getSendingBRToMesWOCount" resultType="java.lang.Integer">
		select count(*) from WorkOrder where SendBRToMes=${@com.batchMesComDK.entity.WorkOrder@SENDING}
		<foreach collection="stateList" item="state" open=" and state in (" separator="," close=")">
		#{state}
		</foreach>
		and DATEDIFF(mi,LastSendTime,GETDATE())&gt;5
	</select>
	<update id="restoreToUnSend">
		update WorkOrder set SendBRToMes=${@com.batchMesComDK.entity.WorkOrder@UN_SEND} where SendBRToMes=${@com.batchMesComDK.entity.WorkOrder@SENDING}
		<foreach collection="stateList" item="state" open=" and state in (" separator="," close=")">
		#{state}
		</foreach>
		and DATEDIFF(mi,LastSendTime,GETDATE())&gt;5
	</update>
	<select id="getCountByWOID" resultType="java.lang.Integer">
		select count(*) from WorkOrder where WorkOrderID=#{workOrderID}
	</select>
</mapper>